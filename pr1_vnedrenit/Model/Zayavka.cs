//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pr1_vnedrenit.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class Zayavka
    {
        public int Id_Zayavka { get; set; }
        public Nullable<int> id_productsi { get; set; }
        public Nullable<int> Id_partner { get; set; }
        public Nullable<int> kolichestvi_productsi { get; set; }
        public Nullable<int> Id_menedcher { get; set; }
        public Nullable<System.DateTime> data_sozdanie { get; set; }
        public Nullable<System.DateTime> data_preadoplati { get; set; }
        public Nullable<System.DateTime> data_vipolnenie { get; set; }
        public Nullable<int> id_status { get; set; }
    
        public virtual Menedcher Menedcher { get; set; }
        public virtual Partneri Partneri { get; set; }
        public virtual Productsia Productsia { get; set; }
        public virtual Status_zayavki Status_zayavki { get; set; }



        // В текущей реализации:
        public decimal Stoimost
        {
            get
            {
                return CalculateStoimost();
            }
        }

        // Рекомендую добавить проверку на отрицательные значения:
        private decimal CalculateStoimost()
        {
            try
            {
                if (Productsia != null && kolichestvi_productsi.HasValue && kolichestvi_productsi > 0)
                {
                    decimal costPerUnit = ParseStoimost(Productsia.minimaknaya_stoimost_partnera);
                    decimal total = costPerUnit * kolichestvi_productsi.Value;

                    // Гарантируем неотрицательное значение
                    return Math.Max(0, Math.Round(total, 2)); // Округление до сотых
                }
                return 0;
            }
            catch
            {
                return 0;
            }
        }

        private decimal ParseStoimost(string stoimostString)
        {
            if (string.IsNullOrEmpty(stoimostString))
                return 0;

            // Убираем возможные пробелы и заменяем запятые на точки
            string cleaned = stoimostString.Trim().Replace(",", ".");

            if (decimal.TryParse(cleaned, System.Globalization.NumberStyles.Any,
                System.Globalization.CultureInfo.InvariantCulture, out decimal result))
            {
                return result;
            }

            return 0;
        }

        public string FormattedStoimost
        {
            get
            {
                return Stoimost.ToString("N2") + " руб.";
            }
        }
}
}
